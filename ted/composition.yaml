---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: ted.templates.krateo.io
spec:
  compositeTypeRef:
    apiVersion: templates.krateo.io/v1alpha1
    kind: Ted
  resources:
    - base:
        apiVersion: git.krateo.io/v1alpha1
        kind: ProviderConfig
        spec:
          deploymentServiceUrl: http://deployment-service-service.krateo-system.svc
          fromRepoCredentials:
            authMethod: basic
            source: Secret
            secretRef:
              namespace: krateo-system
              key: token
          toRepoCredentials:
            source: Secret
            authMethod: bearer
            secretRef:
              namespace: jxp-krateo-system
              key: bearer
      patches:
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "metadata.labels[deploymentId]"
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-provider-git-pc"
        - fromFieldPath: "spec.fromRepo.domain"
          toFieldPath: "spec.fromRepoCredentials.secretRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-secret"
        - fromFieldPath: "spec.toRepo.domain"
          toFieldPath: "spec.toRepoCredentials.secretRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-secret"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.deploymentServiceUrl"
          transforms:
            - type: string
              string:
                fmt: "http://deployment-service-service.%s.svc"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.fromRepoCredentials.secretRef.namespace"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.toRepoCredentials.secretRef.namespace"
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                namespace: krateo-system
      patches:
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "metadata.labels[deploymentId]"
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "spec.forProvider.manifest.metadata.labels[deploymentId]"
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ted-values"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-k8s-pc-in"
        - fromFieldPath: spec._values
          toFieldPath: spec.forProvider.manifest.data.json
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-ted-cm"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.manifest.metadata.namespace
    - base:
        apiVersion: git.krateo.io/v1alpha1
        kind: Repo
        spec:
          forProvider:
            fromRepo:
              path: skeleton
            configMapKeyRef:
              namespace: krateo-system
              key: json
      patches:
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "metadata.labels[deploymentId]"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.fromRepo.schema"
              - fromFieldPath: "spec.fromRepo.domain"
              - fromFieldPath: "spec.fromRepo.organizationName"
              - fromFieldPath: "spec.fromRepo.repositoryName"
            strategy: string
            string:
              fmt: "%s://%s/%s/%s"
          toFieldPath: "spec.forProvider.fromRepo.url"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.toRepo.schema"
              - fromFieldPath: "spec.toRepo.domain"
              - fromFieldPath: "spec.toRepo.organizationName"
              - fromFieldPath: "spec.toRepo.repositoryName"
            strategy: string
            string:
              fmt: "%s://%s/%s/%s"
          toFieldPath: "spec.forProvider.toRepo.url"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-git-pc"
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.configMapKeyRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-ted-cm"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.configMapKeyRef.namespace"
    - base:
        apiVersion: bitbucket.krateo.io/v1alpha1
        kind: ProviderConfig
        spec:
          verbose: false
          insecure: true
          username: "TUJXPGHBQ03"
          credentials:
            authMethod: basic
            source: Secret
            secretRef:
              key: password
      patches:
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "metadata.labels[deploymentId]"
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "spec.forProvider.deploymentId"
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-provider-bb-pc"
        - fromFieldPath: "spec.toRepo.domain"
          toFieldPath: "spec.credentials.secretRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-secret"
        - fromFieldPath: "spec.toRepo.apiUrl"
          toFieldPath: "spec.apiUrl"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.credentials.secretRef.namespace"
    - base:
        apiVersion: bitbucket.krateo.io/v1alpha1
        kind: Repo
      patches:
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "metadata.labels[deploymentId]"
        - fromFieldPath: "metadata.labels[deploymentId]"
          toFieldPath: "spec.forProvider.deploymentId"
        - fromFieldPath: "spec.toRepo.organizationName"
          toFieldPath: "spec.forProvider.project"
        - fromFieldPath: "spec.toRepo.repositoryName"
          toFieldPath: "spec.forProvider.name"
        - fromFieldPath: "spec.toRepo.privateRepository"
          toFieldPath: "spec.forProvider.private"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-bb-pc"
